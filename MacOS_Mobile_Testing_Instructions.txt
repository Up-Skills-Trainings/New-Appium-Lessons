
MacOS Systems

*** What do I need to install in order to do Mobile Testing on MacOS? ***

Documentation: For all Mobile Testing subjects we will be using Appium, and main documentation for this is here: https://appium.io/docs/en/2.1/

1. At least JDK version 11 or a later version needs to be installed 
https://www.oracle.com/java/technologies/downloads/
You might already have installed JDK, to check it, open the terminal and run the command:
$ java --version 

2. Install NodeJS (latest LTS as of today) https://nodejs.org/en/
Node.js is an open-source, cross-platform JavaScript run-time environment that executes JavaScript code outside of a browser.
npm is a package manager for the JavaScript programming language. It is the default package manager for the JavaScript runtime environment Node.js. 

Verify installation with node -v and npm -v.
$ node -v
$ npm -v

!!! Important Note : To give access for node_modules you can use following command if necessary (if you get EACCESS denied error) 
- sudo chown -R yourUserName:/usr/local/lib/
Sudo is superuser can do anything.When you run this command it will ask you password 
and when you are typing your password it will be INVISIBLE.
Type it correctly and click ENTER
- Chown : Change Owner - To quit Node click Ctrl+C twice (if needed)

3. Install Android Studio https://developer.android.com/studio
(Simple installation - Always Next - Do not import Settings (if it asks) - For Data Sharing Don’t Send - Install Type Standard - Finish-Choose SDK Manager)
Open Android Studio click on Configure and select AVD Manager:
Click at Create Virtual Device:
Proceed with Pixel 5 and hit Next:
Download Android 11 by clicking on Download link and following installation instructions.

4. Install Appium Server, you need to open your Terminal and type either:

    npm i appium -g
    npm i --location=global appium

* You might not have writing permissions to /usr/local/lib/node_modules (the place where npm will attempt to install Appium). You might get EACCESS denied error in this situation.

To fix that you can first try following command:
    sudo npm i appium -g 

If this does not work try following: 

sudo chown -R $(whoami): /usr/local/lib/node_modules 
sudo chown -R $(whoami): ~/.npm

Now you can run the npm command to install appium: npm i appium -g

After installing appium, now install driver:

IMPORTANT: Install UiAutomator2 Driver
Run This Command:
   
    appium driver install uiautomator2

    sudo appium driver install uiautomator2

Important Note: Sudo is superuser can do anything.When you run this command it will ask you password and when you are typing your password it will be INVISIBLE.

 
5. Install appium-doctor, you need to open your Terminal and type either of following 
    npm i appium-doctor -g 
    npm i --location=global appium-doctor

* You might not have writing permissions to /usr/local/lib/node_modules (the place where npm will attempt to install Appium). You might get EACCESS denied error in this situation.

To fix that you can first try following command:
    sudo npm i appium-doctor -g 

If this does not work try followings in order: 

sudo chown -R $(whoami): /usr/local/lib/node_modules 
sudo chown -R $(whoami): ~/.npm
sudo npm i appium-doctor -g

Important Note: Sudo is superuser can do anything.When you run this command it will ask you password and when you are typing your password it will be INVISIBLE.

And execute setup verification by running following command on the terminal:
      appium-doctor
      WARN AppiumDoctor ✖ ANDROID_HOME is NOT set!
      WARN AppiumDoctor ✖ JAVA_HOME is NOT set!

      At this point appium-doctor will complain about ANDROID_HOME, JAVA_HOME environment variables 

Let's fix environment variables first. 
Create .zprofile (.bash_profile for older macs) file in the root:
    touch ~/.zprofile 
Open the file:
    nano ~/.zprofile 

And copy paste the following content to the .zprofile (.bash_profile for older macs):
------------
export JAVA_HOME=$(/usr/libexec/java_home)

export ANDROID_HOME=/Users/$(whoami)/Library/Android/sdk

export ANDROID_SDK_ROOT=$ANDROID_HOME

export ANDROID_AVD_HOME=/Users/$(whoami)/.android/avd

export PATH=$PATH:~/.local/bin$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$JAVA_HOME/bin 
-----------

* To save changes to the file hit Control + X, type y and hit Enter. 
Important, finish current terminal promt session (close all terminal windows) and start a new one, so changes to .zprofile/.bash_profile are in sync.

Alternative Way of editing .zprofile/.bash_profile:
You can open the folder with MAC User Interface -Go HOME
Important Note: To see hidden files on Mac, press Command + Shift + . (dot)
Click .zprofile/.bash_profile to Open with text editor (Sublime etc)
Copy and Paste 

6. Install Appium Inspector https://github.com/appium/appium-inspector/releases
You can install the latest release. After installing your computer might now allow it to open.
You can open your security settings of your computer and allow it to work.

Alternatively you can use Browser Version of Appium Inspector without installing.
When you use this version IMPORTANT start your Appium Server with:
        appium --allow cors 


7. Create a Maven project
Add following to pom.xml

    <dependencies>
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>9.2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

